# ---------------------------------------------------------
# *_: Model Objects
# ---------------------------------------------------------

type Message {
  id:               ID!
  senderId:         ID!
  recipientId:      ID!
  message:          String
  image:            String
  imagePublicId:    String
  stickerId:        String
  seenIds:         [ID]

  createdAt:        String!
  updatedAt:        String!
}

# ---------------------------------------------------------
# *_: Input Objects
# ---------------------------------------------------------

input CreateMessageInput {
  recipientId:      ID!
  message:          String
  image:            Upload
  stickerId:        ID
}

input UpdateMessageSeenInput {
  withUserId:       ID!
}

# ---------------------------------------------------------
# *_: Return Payloads
# ---------------------------------------------------------

type MessagePayload {
  id:               ID
  senderId:         ID
  recipientId:      ID
  message:          String
  image:            String
  imagePublicId:    String
  stickerId:        String
  seenIds:         [ID]

  sender:           UserPayload
  recipient:        UserPayload
  sticker:          StickerPayload
  seen:            [UserPayload]

  createdAt:        String
  updatedAt:        String
}

type MessagesPayload {
  count:            Int
  messages:        [MessagePayload]
}

type ConversationsPayload {
  withUserId:       ID
  withUser:         UserPayload
  lastMessage:      MessagePayload
  unseenCount:      Int
}

# ---------------------------------------------------------
# *_: Queries
# ---------------------------------------------------------

type Query {
  # TODO: Get authUser's messages
  getMessages(withUserId: ID!, skip: Int, limit: Int):          MessagesPayload

  # TODO: Get authUser's conversations
  getConversations:                                             [ConversationsPayload]
}

# ---------------------------------------------------------
# *_: Mutations
# ---------------------------------------------------------

type Mutation {
  # TODO: Create a message
  createMessage(input: CreateMessageInput!):                    Boolean

  # TODO: Update messages seen
  updateMessageSeen(input: UpdateMessageSeenInput!):            Boolean
}

# ---------------------------------------------------------
# *_: Subscriptions
# ---------------------------------------------------------

type Subscription {
  # TODO: Subscribe to message created event
  messageCreated(withUserId: ID!):              MessagePayload

  # TODO: Subscribe to new conversation event
  newConversation:                              ConversationsPayload
}
