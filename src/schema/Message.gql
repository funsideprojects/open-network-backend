# ---------------------------------------------------------
# Model Objects
# ---------------------------------------------------------

type Message {
  id:               ID!
  senderId:         ID!
  receiverId:       ID!
  message:          String!
  seen:            [String]

  createdAt:        String
  updatedAt:        String
}

# ---------------------------------------------------------
# Input Objects
# ---------------------------------------------------------

input CreateMessageInput {
  receiverId:       ID!
  message:          String!
}

input UpdateMessageSeenInput {
  withUserId:       ID!
}

# ---------------------------------------------------------
# Return Payloads
# ---------------------------------------------------------

type MessagePayload {
  id:               ID
  receiverId:       ID
  receiver:         UserPayload
  senderId:         ID
  sender:           UserPayload
  message:          String
  seen:            [UserPayload]

  createdAt:        String
  updatedAt:        String
  isFirstMessage:   Boolean
}

type ConversationsPayload {
  id:               ID
  username:         String
  fullName:         String
  image:            String
  isOnline:         Boolean

  lastMessage:      MessagePayload
}

# ---------------------------------------------------------
# Queries
# ---------------------------------------------------------

type Query {
  # Gets authUser's messages
  getMessages(withUserId: ID!):                [MessagePayload]

  # Gets authUser's conversations
  getConversations:                            [ConversationsPayload]
}

# ---------------------------------------------------------
# Mutations
# ---------------------------------------------------------

type Mutation {
  # Creates a message
  createMessage(input: CreateMessageInput!):            MessagePayload

  # Updates message seen values for user
  updateMessageSeen(input: UpdateMessageSeenInput!):    Boolean
}

# ---------------------------------------------------------
# Subscriptions
# ---------------------------------------------------------

type Subscription {
  # Subscribes to message created event
  messageCreated(withUserId: ID!):              MessagePayload

  # Subscribes to new conversation event
  newConversation:                              ConversationsPayload
}
